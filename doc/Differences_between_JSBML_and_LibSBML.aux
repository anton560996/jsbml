\relax 
\ifx\hyper@anchor\@undefined
\global \let \oldcontentsline\contentsline
\gdef \contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global \let \oldnewlabel\newlabel
\gdef \newlabel#1#2{\newlabelxx{#1}#2}
\gdef \newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\let \contentsline\oldcontentsline
\let \newlabel\oldnewlabel}
\else
\global \let \hyper@last\relax 
\fi

\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {section}{\numberline {1}An extended type hierarchy}{4}{section.1}}
\newlabel{1@xvr}{{}{4}{An extended type hierarchy\relax }{section.1}{}}
\newlabel{1@vr}{{}{4}{An extended type hierarchy\relax }{section.1}{}}
\newlabel{2@xvr}{{}{4}{An extended type hierarchy\relax }{figure.1}{}}
\newlabel{2@vr}{{}{4}{An extended type hierarchy\relax }{figure.1}{}}
\newlabel{3@xvr}{{}{4}{An extended type hierarchy\relax }{lstnumber.1.27}{}}
\newlabel{3@vr}{{}{4}{An extended type hierarchy\relax }{lstnumber.1.27}{}}
\newlabel{4@xvr}{{}{4}{An extended type hierarchy\relax }{lstnumber.1.27}{}}
\newlabel{4@vr}{{}{4}{An extended type hierarchy\relax }{lstnumber.1.27}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Abstract syntax trees}{4}{section.2}}
\newlabel{RF1}{5}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The type hierarchy in JSBML}}{5}{figure.1}}
\newlabel{fig:TypeHierarchy}{{1}{5}{The type hierarchy in JSBML\relax }{figure.1}{}}
\newlabel{lst:Visualization}{{1}{6}{Parsing and visualizing the content of an SBML file\relax }{lstlisting.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Parsing and visualizing the content of an SBML file}{6}{lstlisting.1}}
\newlabel{SC@1}{{1}{7}{An extended type hierarchy\relax }{lstnumber.1.27}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Tree representation of an SBML file}}{7}{figure.2}}
\newlabel{fig:Visualization}{{2}{7}{\SC@OPTCAPtext \relax }{figure.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}The \texttt  {ASTNodeCompiler} class}{7}{section.3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Cloning when adding child nodes}{7}{section.4}}
\newlabel{5@xvr}{{}{7}{Cloning when adding child nodes\relax }{section.4}{}}
\newlabel{5@vr}{{}{7}{Cloning when adding child nodes\relax }{section.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Change events and listeners}{8}{section.5}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Deprecation}{8}{section.6}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Exceptions}{8}{section.7}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Initial assignments}{9}{section.8}}
\@writefile{toc}{\contentsline {section}{\numberline {9}Model history}{9}{section.9}}
\@writefile{toc}{\contentsline {section}{\numberline {10}The \texttt  {MathContainer} interface}{9}{section.10}}
\@writefile{toc}{\contentsline {section}{\numberline {11}The classes \texttt  {libSBML} and \texttt  {JSBML}}{9}{section.11}}
\@writefile{toc}{\contentsline {section}{\numberline {12}Replacement of the interface \texttt  {libSBMConstants} by Java enums}{10}{section.12}}
\@writefile{toc}{\contentsline {section}{\numberline {13}Various types of \texttt  {ListOf*} classes}{10}{section.13}}
\citation{Funahashi2003}
\bibstyle{natbib}
\bibdata{literature}
\bibcite{Funahashi2003}{{1}{2003}{{Funahashi {\em  et~al.}}}{{Funahashi, Tanimura, Morohashi, and Kitano}}}
\@writefile{toc}{\contentsline {section}{\numberline {14}Units}{11}{section.14}}
\@writefile{toc}{\contentsline {section}{\numberline {15}Unit Definitions}{11}{section.15}}
\@writefile{toc}{\contentsline {section}{\numberline {A}An example of how to turn a JSBML-based application into a CellDesigner plug-in}{11}{appendix.A}}
\newlabel{6@xvr}{{}{11}{An example of how to turn a JSBML-based application into a CellDesigner plug-in\relax }{lstnumber.3.47}{}}
\newlabel{6@vr}{{}{11}{An example of how to turn a JSBML-based application into a CellDesigner plug-in\relax }{lstnumber.3.47}{}}
\newlabel{7@xvr}{{}{11}{An example of how to turn a JSBML-based application into a CellDesigner plug-in\relax }{lstnumber.3.47}{}}
\newlabel{7@vr}{{}{11}{An example of how to turn a JSBML-based application into a CellDesigner plug-in\relax }{lstnumber.3.47}{}}
\newlabel{8@xvr}{{}{11}{An example of how to turn a JSBML-based application into a CellDesigner plug-in\relax }{lstnumber.3.47}{}}
\newlabel{8@vr}{{}{11}{An example of how to turn a JSBML-based application into a CellDesigner plug-in\relax }{lstnumber.3.47}{}}
\@writefile{toc}{\contentsline {section}{References}{11}{section*.2}}
\newlabel{lst:PluginAction}{{2}{12}{A simple implementation of CellDesigner's abstract class \texttt {PluginAction}\relax }{lstlisting.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}A simple implementation of CellDesigner's abstract class \texttt  {PluginAction}}{12}{lstlisting.2}}
\newlabel{lst:Plugin}{{3}{13}{A simple example for a CellDesigner plug-in using JSBML as a communication layer\relax }{lstlisting.3}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}A simple example for a CellDesigner plug-in using JSBML as a communication layer}{13}{lstlisting.3}}
\newlabel{lst:PluginMethods}{{4}{14}{Empty implementation of the methods from the abstract class \texttt {CellDesignerPlugin}\relax }{lstlisting.4}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}Empty implementation of the methods from the abstract class \texttt  {CellDesignerPlugin}}{14}{lstlisting.4}}
\global\@altsecnumformattrue
