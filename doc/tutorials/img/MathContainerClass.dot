#!/usr/local/bin/dot
#
# Class diagram
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#
// dot -Tpdf -oMathContainerClass.pdf MathContainerClass.dot && acroread MathContainerClass.pdf &
digraph G {
margin=0;
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
        node [fontname="Helvetica",fontsize=10,shape=plaintext,margin="0.1,0"];
	nodesep=0.25;
	ranksep=0.5;
	// org.sbml.jsbml.AbstractMathContainer
	c0 [label=<<table title="org.sbml.jsbml.AbstractMathContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractMathContainer </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - math : ASTNode </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//org.sbml.jsbml.AbstractMathContainer extends AbstractSBase
	c1:p -> c0:p [dir=back,arrowtail=empty];
	// org.sbml.jsbml.AbstractMathContainer COMPOSED ASTNode
	c2:p -> c0:p [taillabel="\n\n\n      0..1", label="math", headlabel="\n\n0..1     ", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=back];
	// org.sbml.jsbml.AbstractMathContainer COMPOSED ASTNode
	c2:p -> c10:p [taillabel="0..n      ", label="variable", headlabel="0..1\n\n", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=diamond, arrowtail=none, dir=back];
	// AbstractSBase
	c1[height=0.1,label=<<table title="org.sbml.jsbml.AbstractSBase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api//AbstractSBase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractSBase </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
// 	// ASTNode
// 	c2[label=<<table title="ASTNode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api//ASTNode.html">
// 		<tr><td><table border="0" cellspacing="0" cellpadding="1">
// <tr><td align="center" balign="center"> ASTNode </td></tr>
// 		</table></td></tr>
// 		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];

/*
 * Test
 */

	// org.sbml.jsbml.ASTNode
	c2 [height=0.1,label=<<table title="org.sbml.jsbml.ASTNode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ASTNode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - denominator : int </td></tr>
<tr><td align="left" balign="left"> - exponent : int </td></tr>
<tr><td align="left" balign="left"> - listOfNodes : LinkedList&lt;ASTNode&gt; </td></tr>
<tr><td align="left" balign="left"> - mantissa : double </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - numerator : int </td></tr>
<tr><td align="left" balign="left"> - parent : ASTNode </td></tr>
<tr><td align="left" balign="left"> - type : ASTNode.Type </td></tr>
<tr><td align="left" balign="left"> - unitId : String </td></tr>
<tr><td align="left" balign="left"> - variable : CallableSBase </td></tr>
<tr><td align="left" balign="left"> ~ parentSBMLObject : MathContainer </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.sbml.jsbml.ASTNodeCompiler
	c3 [label=<<table title="org.sbml.jsbml.ASTNodeCompiler" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ASTNodeCompiler </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//org.sbml.jsbml.ASTNode implements javax.swing.tree.TreeNode
	c4:s -> c2:n [dir=back,arrowtail=empty,style=dashed];
// 	// org.sbml.jsbml.ASTNode COMPOSED org.sbml.jsbml.ASTNode
// 	c2:ne -> c2:se [taillabel="0..n\n\n\n\n", label=" child", headlabel="\n1", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond];
	// org.sbml.jsbml.ASTNode DEPEND org.sbml.jsbml.ASTNodeCompiler
	c2:p -> c3:p [taillabel="", label="  &#171;call&#187;", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// javax.swing.tree.TreeNode
	c4 [label=<<table title="javax.swing.tree.TreeNode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/tree/TreeNode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> TreeNode </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
        // org.sbml.jsbml.SBaseWithDerivedUnit
	c5 [label=<<table title="org.sbml.jsbml.SBaseWithDerivedUnit" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SBaseWithDerivedUnit </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];

	// org.sbml.jsbml.MathContainer
        // MathContainer -> SBaseWithDerivedUnit
        c5:s -> c7:n [dir=back,arrowtail=empty,style=dashed];
        // AbstractMathContainer -> MathContainer
        c7:s -> c0:n [dir=back,arrowtail=empty,style=dashed];
        // org.sbml.jsbml.SBase
	c6 [width=0.1,height=0.1,label=<<table title="org.sbml.jsbml.SBase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SBase </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	c7 [label=<<table title="org.sbml.jsbml.MathContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MathContainer </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];

	// java.lang.Cloneable
	c8 [label=<<table title="java.lang.Cloneable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Cloneable </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.io.Serializable
	c9 [label=<<table title="java.io.Serializable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Serializable </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.sbml.jsbml.CallableSBase
	c10 [label=<<table title="org.sbml.jsbml.CallableSBase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> CallableSBase </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];


        // AbstractSBase -> SBase
        c6:p -> c1:n [dir=back,arrowtail=empty,style=dashed];
        // SBaseWithDerivedUnit -> SBase
        c6:p -> c5:n [dir=back,arrowtail=empty,style=dashed];
        // SBase -> TreeNode
        c4:p -> c6:p [dir=back,arrowtail=empty,style=dashed];
        // SBase -> Cloneable
        c8:n -> c6:n [dir=back,arrowtail=empty,style=dashed];
        // SBase -> Serializable
        c9:n -> c6:n [dir=back,arrowtail=empty,style=dashed];
        // CallableSBase -> SBase
        c5:p -> c10:p [dir=back,arrowtail=empty,style=dashed];
        // ASTNode -> Cloneable
        c8:s -> c2:n [dir=back,arrowtail=empty,style=dashed];
        // ASTNode -> Serializable
        c9:s -> c2:n [dir=back,arrowtail=empty,style=dashed];

 {rank="same"; c5; c1}
 {rank="same"; c4; c6; c8; c9}
}

