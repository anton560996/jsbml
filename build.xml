<?xml version="1.0"?>
<!-- $Id$ -->

<project default ="usage" basedir=".">
  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->

  <target name="init">
  	<tstamp>
  	    <format property="YEAR" pattern="yyyy"/>
	</tstamp>

    <property name="Name" value="JSBML"/>
    <property name="name" value="jsbml"/>
    <property name="version" value="0.8"/>

    <property name="year" value="${YEAR}"/>
  	
    <echo message="----------- ${Name} ${version} [${year}] ------------"/>
    <echo message="-----------     ${TODAY}   ------------"/>
    <echo message="-----------     ${DSTAMP} ${TSTAMP}  ------------"/>
  	
    <property environment="env"/>
    <property name="build.compiler" value="modern"/>
    <property name="build.sysclasspath" value="ignore"/>
    <property name="debug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="deprecation" value="false"/>
    <property name="depend" value="true"/>
    <property name="verbose" value="false"/>
    
    <property name="build.number" value="${DSTAMP}-${TSTAMP}"/>
    <property name="build.name" value="${version} (build ${build.number})"/>

    <property name="src.dir" value="${basedir}/src"/>
  	<property name="test.src.dir" value="${basedir}/test"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.src" value="${basedir}/build/src"/>
    <property name="build.dest" value="${basedir}/build/classes"/>
    <property name="build.javadocs" value="${basedir}/build/apidocs"/>
    <property name="jars.dir" value="${basedir}/lib"/>
    <property name="dist.root" value="${basedir}/dist"/>
    <property name="dist.dir" value="${dist.root}/${name}-${version}"/>
    <property name="package.dir" value="${basedir}/build/package"/>
  	<property name="resource.dir" value="${basedir}/resources"/>
  	
    <filter token="year" value="${year}"/>
    <filter token="version" value="${version}"/>
    <filter token="date" value="${TODAY}"/>
    <filter token="log" value="true"/>
    <filter token="verbose" value="true"/>

    <!-- add everything needed to the classpath -->
    <!-- adjust the settings to your local environment -->
    <path id="classpath">
      <fileset dir="${jars.dir}" includes="*.jar *.zip">
      </fileset>
    </path>
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage" depends="init">
    <echo message=""/>
    <echo message=""/>
    <echo message=" ${Name} Build file"/>
    <echo message=" -------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   compile     --> compiles the source code"/>
    <echo message="   jar         --> generates the ${name}.jar file"/>
    <echo message="   bigjar      --> generates the ${name}-with-dependencies.jar file"/>
    <echo message="   test        --> runs the Tests"/>
    <echo message="   update-sbo  --> Updates the SBO Ontology file "/>
    <echo message="   javadoc     --> generates the API documentation"/>
    <echo message="   clean       --> cleans up the directory"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message=" -------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
    <echo message="Done"/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the source code                                            -->
  <!-- =================================================================== -->
  <target name="prepare-src" depends="prepare">
    <!-- create directories -->
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>
    <mkdir dir="${package.dir}"/>
    <mkdir dir="${dist.root}"/>
    <mkdir dir="${dist.dir}"/>

    <!-- copy src files -->
    <copy todir="${build.src}" overwrite="yes">
        <fileset 
            dir="${src.dir}"
            excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip ">
        </fileset>
    </copy>
  	
  	<copy todir="${build.src}" overwrite="yes">
  	        <fileset 
  	            dir="${test.src.dir}"
  	        	includes="org/sbml/jsbml/**"
  	            excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip ">
  	        </fileset>
  	    </copy>
  	
  	<copy todir="${build.src}" overwrite="yes">
  	  	        <fileset 
  	  	            dir="${resource.dir}"
  	  	        	includes="org/sbml/jsbml/**"
  	  	            excludes="**/.svn*, **/*~, **/*.tgz, **/*.zip ">
  	  	        </fileset>
  	  	    </copy>
  	
  </target>


  <!-- =================================================================== -->
  <!-- Modify somes files                                                  -->
  <!-- =================================================================== -->
  <target name="gen-build-number" unless="dev.mode">
       <echo message="Updating the files with the build number..."/>

       <replace file="${basedir}/doc/Readme.html"
                token="[BUILD.NUMBER]"
                value="${build.name}" />


   </target>
  
  <!-- =================================================================== -->
  <!-- Modify back somes files                                                  -->
  <!-- =================================================================== -->
  <target name="gen-build-number-back" depends="jar" unless="dev.mode">
       <echo message="Updating back the files with [BUILD.NUMBER]..."/>


       <replace file="${basedir}/doc/Readme.html"
                token="${build.name}"
                value="[BUILD.NUMBER]" />

   </target>


  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare-src">   
    <javac srcdir="${build.src}"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}"
           verbose="${verbose}"
           source="1.5"
           target="1.5"
           classpathref="classpath">
    </javac>      
  </target>
  

  <!-- =================================================================== -->  
  <!-- Creates the class package                                           -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile">
      
    <copy todir="${build.dest}">
        <fileset
            dir="${build.src}"
            includes="**/*.png **/*.gif **/*.xsd **/*.tmpl **/data/* **/*.xml **/*.cfg **/*.obo **/*.properties" > 
        </fileset>
    </copy>
    <jar jarfile="${build.dir}/${name}.jar"
         basedir="${build.dest}"/>
  </target>

  <!-- =================================================================== -->  
  <!-- Creates the class package and include all the dependencies jars      -->
  <!-- into a big jsbml jar file.                                                                    -->
  <!-- =================================================================== -->
  <target name="bigjar" depends="compile">

	<!-- we use the ${build.src} to include the sources of jsbml in the resulting jar -->
    <copy todir="${build.dest}">
        <fileset
            dir="${build.src}"
            includes="**/*.png **/*.gif **/*.xsd **/*.tmpl **/data/* **/*.xml **/*.cfg **/*.obo **/*.properties **/*.java" > 
        </fileset>	      
    </copy>
    <jar jarfile="${build.dir}/${name}-with-dependencies.jar"
         basedir="${build.dest}">
    	<zipgroupfileset dir="${jars.dir}" includes="*.jar" />
    	 
    </jar>     
  </target>


  <!-- =================================================================== -->  
  <!-- Test the jsbml library                                              -->
  <!-- =================================================================== -->
  <target name="test" depends="init">


	<echo message="This first test should have NO failures or errors."/>
	<echo message="This second test is expected to report some failures or errors corresponding to the libsbml API differences."/>
  	<echo message=""/>
  	<echo message="You can see a details of the tests on the two files : jsbmlTestResults.txt and libsbmlCompatibilityTestResults.txt"/>
  	
    <junit printsummary="yes" > <!-- showoutput="yes" -->
    	<jvmarg value="-DDATA_FOLDER=${build.dest}/org/sbml/jsbml/xml/test/data/"/>
        <sysproperty key="DATA_FOLDER" value="${build.dest}/org/sbml/jsbml/xml/test/data"/>

    	<formatter type="plain"/>
    	<test name="org.sbml.jsbml.xml.test.Tests" outfile="jsbmlTestResults">
    		<formatter type="plain"/>
    	</test>
        <classpath>
           <path refid="classpath"/>
           <pathelement location="${build.dir}/${name}.jar"/>
        </classpath>
   </junit>

    	<junit printsummary="yes" > <!-- showoutput="yes" -->
        	<jvmarg value="-DDATA_FOLDER=${build.dest}/org/sbml/jsbml/xml/test/data/"/>
            <sysproperty key="DATA_FOLDER" value="${build.dest}/org/sbml/jsbml/xml/test/data"/>

        	<formatter type="plain"/>
    	<test name="org.sbml.jsbml.xml.test.LibsbmlCompatibilityTests" outfile="libsbmlCompatibilityTestResults">
    		<formatter type="plain"/>
    	</test>
            <classpath>
               <path refid="classpath"/>
               <pathelement location="${build.dir}/${name}.jar"/>
            </classpath>
       </junit>
  	
  </target>
  
  <!-- =================================================================== -->
  <!-- Updates the SBO Ontology file                                       -->
  <!-- =================================================================== -->
  <target name="update-sbo">
  
    <get src="http://www.ebi.ac.uk/sbo/exports/Main/SBO_OBO.obo" dest="${basedir}/resources/org/sbml/jsbml/resources/cfg/SBO_OBO.obo" verbose="on"/>
  

  </target>
	
  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="javadoc" depends="prepare-src">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="org.*"
             sourcepath="${build.src}"
             destdir="${build.javadocs}"
             classpathref="classpath"
             maxmemory="96m"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} API"
             doctitle="${Name}"
    	     breakiterator="yes"
    >
		<link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
   </javadoc> 	
  </target>

  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete includeEmptyDirs="true" quiet="yes">
       <fileset dir="${build.dir}" includes="**/*"/>
    </delete>
  	<delete dir="${dist.root}" includeEmptyDirs="true" quiet="yes">
  	    </delete>
  </target>
</project>

<!-- End of file -->
