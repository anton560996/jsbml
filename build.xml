<?xml version="1.0"?>
<!-- $Id$ -->

<project default ="usage" basedir=".">	

	
	<!-- =================================================================== -->
	<!-- Initialization target                                               -->
	<!-- =================================================================== -->

	<target name="init">
		<tstamp>
			<format property="YEAR" pattern="yyyy"/>
		</tstamp>

		<property name="Name" value="JSBML"/>
		<property name="name" value="jsbml"/>
		<property name="version" value="0.8"/>
		<property name="api.version" value="0.8"/>

		<property name="year" value="${YEAR}"/>

		<echo message="----------- ${Name} ${version} [${year}] ------------"/>
		<echo message="-----------     ${TODAY}   ------------"/>
		<echo message="-----------     ${DSTAMP} ${TSTAMP}  ------------"/>

		<property environment="env"/>
		<property name="build.compiler" value="modern"/>
		<property name="build.sysclasspath" value="ignore"/>
		<property name="debug" value="on"/>
		<property name="optimize" value="off"/>
		<property name="deprecation" value="false"/>
		<property name="depend" value="true"/>
		<property name="verbose" value="false"/>

		<property name="build.number" value="${DSTAMP}-${TSTAMP}"/>
		<property name="build.name" value="${version} (build ${build.number})"/>

		<property name="src.dir" value="${basedir}/src"/>
		<property name="test.src.dir" value="${basedir}/test"/>
		<property name="build.dir" value="${basedir}/build"/>
		<property name="build.src" value="${basedir}/build/src"/>
		<property name="build.dest" value="${basedir}/build/classes"/>
		<property name="build.javadocs" value="${basedir}/build/apidocs"/>
		<property name="jars.dir" value="${basedir}/lib"/>
		<property name="dist.root" value="${basedir}/dist"/>
		<property name="dist.dir" value="${dist.root}/${name}-${version}"/>
		<property name="package.dir" value="${basedir}/build/package"/>
		<property name="resource.dir" value="${basedir}/resources"/>

		<property name="cellDesigner.module.base.dir" value="${basedir}/../celldesigner-module-jsbml-0.8"/>
		<property name="libSBMLio.module.base.dir" value="${basedir}/../libSBMLio-module-jsbml-0.8-libsbml-5.4"/>

		<filter token="year" value="${year}"/>
		<filter token="version" value="${version}"/>
		<filter token="date" value="${TODAY}"/>
		<filter token="log" value="true"/>
		<filter token="verbose" value="true"/>

		<!-- add everything needed to the classpath -->
		<!-- adjust the settings to your local environment -->
		<path id="classpath">
			<fileset dir="${jars.dir}" includes="*.jar *.zip">
			</fileset>
		</path>	

	</target>

	<!-- =================================================================== -->
	<!-- Help on usage                                                       -->
	<!-- =================================================================== -->
	<target name="usage" depends="init">
		<echo message=""/>
		<echo message=""/>
		<echo message=" ${Name} Build file"/>
		<echo message=" -------------------------------------------------------------"/>
		<echo message=""/>
		<echo message=" available targets are:"/>
		<echo message=""/>
		<echo message="   compile     --> compiles the source code"/>
		<echo message="   jar         --> generates the ${name}.jar file"/>
		<echo message="   bigjar      --> generates the ${name}-with-dependencies.jar file"/>
		<echo message="   test        --> runs the tests"/>
		<echo message="   checkConsistencyTest        --> runs the only tests for the sbml online validator"/>
		<echo message="   update-sbo  --> Updates the SBO Ontology file "/>
		<echo message="   javadoc     --> generates the API documentation"/>
		<echo message="   clean       --> cleans up the directory"/>
		<echo message=""/>
		<echo message=" See the comments inside the build.xml file for more details."/>
		<echo message=" -------------------------------------------------------------"/>
		<echo message=""/>
		<echo message=""/>
	</target>

	<!-- =================================================================== -->
	<!-- Prepares the build directory                                        -->
	<!-- =================================================================== -->
	<target name="prepare" depends="init">
		<mkdir dir="${build.dir}"/>
		<echo message="Done"/>
	</target>

	<!-- =================================================================== -->
	<!-- Prepares the source code                                            -->
	<!-- =================================================================== -->
	<target name="prepare-src" depends="prepare">
		<!-- create directories -->
		<mkdir dir="${build.src}"/>
		<mkdir dir="${build.dest}"/>
		<mkdir dir="${build.dest}/META-INF"/>
		<mkdir dir="${package.dir}"/>

		<!-- copy src files -->
		<copy todir="${build.src}" overwrite="yes">
			<fileset 
            dir="${src.dir}"
            excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip ">
			</fileset>
		</copy>

		<copy todir="${build.src}" overwrite="yes">
			<fileset 
  	            dir="${test.src.dir}"
  	        	includes="org/sbml/jsbml/**"
  	            excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip ">
			</fileset>
		</copy>

		<copy todir="${build.src}" overwrite="yes">
			<fileset 
  	  	            dir="${resource.dir}"
  	  	        	includes="org/sbml/jsbml/**, **/*.properties"
  	  	            excludes="**/.svn*, **/*~, **/*.tgz, **/*.zip">
			</fileset>
		</copy>

	</target>


	<!-- =================================================================== -->
	<!-- Modify somes files                                                  -->
	<!-- =================================================================== -->
	<target name="gen-build-number" unless="dev.mode">
		<echo message="Updating the files with the build number..."/>

		<replace file="${basedir}/doc/Readme.html"
                token="[BUILD.NUMBER]"
                value="${build.name}" />


	</target>

	<!-- =================================================================== -->
	<!-- Modify back somes files                                                  -->
	<!-- =================================================================== -->
	<target name="gen-build-number-back" depends="jar" unless="dev.mode">
		<echo message="Updating back the files with [BUILD.NUMBER]..."/>


		<replace file="${basedir}/doc/Readme.html"
                token="${build.name}"
                value="[BUILD.NUMBER]" />

	</target>


	<!-- =================================================================== -->
	<!-- Compiles the source directory                                       -->
	<!-- =================================================================== -->
	<target name="compile" depends="prepare-src">
		<javac srcdir="${build.src}"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}"
           verbose="${verbose}"
           source="1.5"
           target="1.5"
           classpathref="classpath">
		</javac>
		<manifest file="${build.dest}/META-INF/MANIFEST.MF">
			<section name="${Name}">
				<attribute name="Specification-Title" value="${Name}"/>
				<attribute name="Specification-Version" value="${api.version}"/>
				<attribute name="Implementation-Title" value="${Name}"/>
				<attribute name="Implementation-Version" value="${version}"/>
			</section>
		</manifest>

	</target>


	<!-- =================================================================== -->
	<!-- Creates the class package                                           -->
	<!-- =================================================================== -->
	<target name="jar" depends="compile">

		<copy todir="${build.dest}">
			<fileset dir="${build.src}" 
				includes="**/*.png **/*.gif **/*.xsd **/*.tmpl **/data/* **/*.xml **/*.cfg **/*.obo **/*.properties">
			</fileset>
		</copy>
		<jar jarfile="${build.dir}/${name}-${version}.jar" basedir="${build.dest}" manifest="${build.dest}/META-INF/MANIFEST.MF"/>
	</target>

	<!-- =================================================================== -->
	<!-- Creates the source jar package                                      -->
	<!-- =================================================================== -->
	<target name="jar-src" depends="prepare-src">

		<jar jarfile="${build.dir}/${name}-${version}-src.jar" basedir="${build.src}" includes="**/*.java"/>

	</target>

	<!-- =================================================================== -->
	<!-- Creates the class package and include all the dependencies jars      -->
	<!-- into a big jsbml jar file.                                                                    -->
	<!-- =================================================================== -->
	<target name="bigjar" depends="compile">

		<!-- we use the ${build.src} to include the sources of jsbml in the resulting jar -->
		<copy todir="${build.dest}">
			<fileset
            dir="${build.src}"
            includes="**/*.png **/*.gif **/*.xsd **/*.tmpl **/data/* **/*.xml **/*.cfg **/*.obo **/*.properties **/*.java" >
			</fileset>
		</copy>
		<jar jarfile="${build.dir}/${name}-${version}-with-dependencies.jar"
         basedir="${build.dest}"  manifest="${build.dest}/META-INF/MANIFEST.MF">
			<zipgroupfileset dir="${jars.dir}" includes="*.jar" />

		</jar>
	</target>


	<!-- =================================================================== -->
	<!-- Test the jsbml library                                              -->
	<!-- =================================================================== -->
	<target name="test" depends="jar">


		<echo message="This first and second tests should have NO failures or errors."/>
		<echo message=""/>
		<echo message="This third test should report only failures and errors corresponding to the API differences with libsbml"/>
		<echo message="If there is one test that succeed, it means one of the API differences as been removed."/>
		<echo message=""/>
		<echo message="You can see a details of the tests on the two files : jsbmlTestResults.txt and libsbmlCompatibilityTestResults.txt"/>
		<echo message=""/>

		<junit printsummary="yes" >
			<!-- showoutput="yes" -->
			<jvmarg value="-DDATA_FOLDER=${build.dest}/org/sbml/jsbml/xml/test/data/"/>
			<sysproperty key="DATA_FOLDER" value="${build.dest}/org/sbml/jsbml/xml/test/data"/>

			<formatter type="plain"/>
			<test name="org.sbml.jsbml.xml.test.Tests" outfile="jsbmlTestResults">
				<formatter type="plain"/>
			</test>
			<classpath>
				<path refid="classpath"/>
				<pathelement location="${build.dir}/${name}-${version}.jar"/>
			</classpath>
		</junit>
		<echo message=""/>

		<junit printsummary="yes" >
			<!-- showoutput="yes" -->
			<jvmarg value="-DDATA_FOLDER=${build.dest}/org/sbml/jsbml/xml/test/data/"/>
			<sysproperty key="DATA_FOLDER" value="${build.dest}/org/sbml/jsbml/xml/test/data"/>

			<formatter type="plain"/>
			<test name="org.sbml.jsbml.xml.test.LibsbmlCompatibilityTests" outfile="libsbmlCompatibilityTestResults">
				<formatter type="plain"/>
			</test>
			<classpath>
				<path refid="classpath"/>
				<pathelement location="${build.dir}/${name}-${version}.jar"/>
			</classpath>
		</junit>
		<echo message=""/>

		<junit printsummary="yes" >
			<!-- showoutput="yes" -->
			<jvmarg value="-DDATA_FOLDER=${build.dest}/org/sbml/jsbml/xml/test/data/"/>
			<sysproperty key="DATA_FOLDER" value="${build.dest}/org/sbml/jsbml/xml/test/data"/>

			<formatter type="plain"/>
			<test name="org.sbml.jsbml.test.sbml.TestIncompatibilities" outfile="incompatibilitiesTestResults">
				<formatter type="plain"/>
			</test>
			<classpath>
				<path refid="classpath"/>
				<pathelement location="${build.dir}/${name}-${version}.jar"/>
			</classpath>
		</junit>

	</target>

	<!-- =================================================================== -->
	<!-- Test the jsbml library                                      TestCheckConsistency        -->
	<!-- =================================================================== -->
	<target name="checkConsistencyTest" depends="jar">


		<echo message="These tests are using the sbml online validator"/>
		<echo message=""/>
		<echo message="You can see a details of the tests on the two files : sbmlOnlineValidatorTestResults.txt"/>
		<echo message=""/>

		<junit printsummary="yes" >
			<!-- showoutput="yes" -->
			<jvmarg value="-DDATA_FOLDER=${build.dest}/org/sbml/jsbml/xml/test/data/"/>
			<sysproperty key="DATA_FOLDER" value="${build.dest}/org/sbml/jsbml/xml/test/data"/>

			<formatter type="plain"/>
			<test name="org.sbml.jsbml.xml.test.CheckConsistencyTests" outfile="sbmlOnlineValidatorTestResults">
				<formatter type="plain"/>
			</test>
			<classpath>
				<path refid="classpath"/>
				<pathelement location="${build.dir}/${name}-${version}.jar"/>
			</classpath>
		</junit>
		<echo message=""/>
	</target>


	<!-- =================================================================== -->
	<!-- Updates the SBO Ontology file                                       -->
	<!-- =================================================================== -->
	<target name="update-sbo">

		<get src="http://www.ebi.ac.uk/sbo/exports/Main/SBO_OBO.obo" dest="${basedir}/resources/org/sbml/jsbml/resources/cfg/SBO_OBO.obo" verbose="on"/>


	</target>

	<!-- =================================================================== -->
	<!-- Creates the API documentation                                       -->
	<!-- =================================================================== -->
	<target name="javadoc" depends="prepare-src">
		<mkdir dir="${build.javadocs}"/>
		<javadoc packagenames="org.*"
    		 excludepackagenames="org.sbml.jsbml.test.*, org.sbml.jsbml.xml.test.*"
             sourcepath="${build.src}"
             destdir="${build.javadocs}"
             classpathref="classpath"
             maxmemory="96m"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} ${version} API Specification"
             doctitle="${Name} ${version} API Specification"
    	     breakiterator="yes"
    		 access="public"
    >
			<link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
			<link href="http://www.biojava.org/docs/api17"/>
			<tag name="sbml.deprecated" description="Deprecated in SBML since :"/>
			<tag name="jsbml.note" description="Note"/>
			<tag name="jsbml.warning"/>
			<tag name="doc.note"  description="Documentation note"/>

		</javadoc>
	</target>

	<!-- =================================================================== -->
	<!-- Creates the javadocs jar package                                      -->
	<!-- =================================================================== -->
	<target name="jar-javadoc" depends="javadoc">

		<jar jarfile="${build.dir}/${name}-${version}-javadoc.jar" basedir="${build.javadocs}" />

	</target>

	<!-- =================================================================== -->
	<!-- Creates the distribution                                            -->
	<!-- =================================================================== -->
	<target name="dist" depends="prepare-src">

		<mkdir dir="${dist.root}"/>
		<mkdir dir="${dist.dir}"/>

		<!-- Creates the standard jar file -->

		<antcall target="clean"/>

		<antcall target="jar"/>
		<antcall target="jar-src"/>
		<copy todir="${dist.dir}" file="${build.dir}/${name}-${version}-src.jar"/>

		<antcall target="test"/>

		<copy todir="${dist.dir}" file="${build.dir}/${name}-${version}.jar"/>
		<copy todir="${dist.root}" file="${build.dir}/${name}-${version}.jar"/>

		<!-- Creates the jar file including all the dependencies -->

		<antcall target="bigjar"/>

		<copy todir="${dist.dir}" file="${build.dir}/${name}-${version}-with-dependencies.jar"/>
		<copy todir="${dist.root}" file="${build.dir}/${name}-${version}-with-dependencies.jar"/>

		<!-- Creates and copy the generated javadoc -->
		<antcall target="jar-javadoc"/>

		<copy todir="${dist.dir}/doc/api">
			<fileset dir="${build.javadocs}/" includes="**/*">
			</fileset>
		</copy>
		<copy todir="${dist.dir}" file="${build.dir}/${name}-${version}-javadoc.jar"/>

		<!-- Copy the source files -->
		<copy todir="${dist.dir}/src">
			<fileset dir="${build.src}/" includes="**/*">
			</fileset>
		</copy>

		<!-- Copy all the dependencies jar files -->
		<copy todir="${dist.dir}/lib">
			<fileset dir="${jars.dir}/" includes="*.jar">
			</fileset>
		</copy>


		<copy todir="${dist.dir}">
			<fileset dir="${basedir}/" includes="LICENSE.txt NEWS.txt README AUTHORS.txt build.xml">
			</fileset>
		</copy>
		<copy todir="${dist.dir}/licenses">
			<fileset dir="${basedir}/licenses" includes="**/*">
			</fileset>
		</copy>

		<copy todir="${dist.dir}/doc">
			<fileset dir="${basedir}/doc" includes="**/*.pdf **/*.jpg **/*.java" excludes="posters/** publications/** templates/**">

			</fileset>
		</copy>

		<!-- create the modules files -->
		<antcall target="module-dist"/>

		<!-- Creates the archives to be distributed -->
		<zip basedir="${dist.root}" destfile="${dist.root}/${name}-${version}.zip" includes="${name}-${version}/**"/>

		<!-- Not generating a tar.gz a having only a zip file should be enough -->
		<!-- <tar basedir="${dist.root}" destfile="${dist.root}/${name}-${version}.tar.gz" includes="${name}-${version}/**" compression="gzip"/> -->

	</target>


	<!-- =================================================================== -->
	<!-- Build the jsbml modules                                             -->
	<!-- =================================================================== -->
	<target name="module" depends="init">


		<ant dir="${cellDesigner.module.base.dir}" inheritAll="false" inheritRefs="false">
			<target name="clean"/>
			<target name="jar"/>
			<target name="javadoc"/>
		</ant>

		<ant dir="${libSBMLio.module.base.dir}"  inheritAll="false" inheritRefs="false">
			<target name="clean"/>
			<target name="jar"/>
			<target name="javadoc"/>
		</ant>

	</target>


	<!-- =================================================================== -->
	<!-- Build the jsbml modules                                             -->
	<!-- =================================================================== -->
	<target name="module-dist" depends="init">

		<mkdir dir="${dist.dir}/modules"/>

		<property file="${cellDesigner.module.base.dir}/celldesigner-build.properties"/>  		
		<property file="${libSBMLio.module.base.dir}/libSBMLio-build.properties"/>  		

		<!--
	    <echo message="Value read from celldesigner properties file = ${celldesigner.name}" />
		<echo message="Value read from celldesigner properties file = ${celldesigner.version}" />
	    <echo message="Value read from libSBMLio properties file = ${libSBMLio.name}" />
		-->
		
		<ant dir="${cellDesigner.module.base.dir}" inheritAll="false" inheritRefs="false">
			<target name="dist"/>
		</ant>

		<copy todir="${dist.dir}/modules/${celldesigner.name}-${celldesigner.version}">
			<fileset dir="${cellDesigner.module.base.dir}/dist/${celldesigner.name}-${celldesigner.version}" includes="*.jar"/>
		</copy>

		<ant dir="${libSBMLio.module.base.dir}" inheritAll="false" inheritRefs="true">
			<target name="dist" />
		</ant>

		<copy todir="${dist.dir}/modules/${libSBMLio.name}-${libSBMLio.version}">
			<fileset dir="${libSBMLio.module.base.dir}/dist/${libSBMLio.name}-${libSBMLio.version}"  includes="*.jar"/>
		</copy>
		
	</target>


	<!-- =================================================================== -->
	<!-- Cleans everything                                                   -->
	<!-- =================================================================== -->
	<target name="clean" depends="init">
		<delete includeEmptyDirs="true" quiet="yes">
			<fileset dir="${build.dir}" includes="**/*"/>
		</delete>
		<delete dir="${dist.root}" includeEmptyDirs="true" quiet="yes">
		</delete>
	</target>
</project>

<!-- End of file -->
