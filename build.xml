<?xml version="1.0"?>
<!-- $Id$ -->

<project default ="usage" basedir=".">
  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->

  <target name="init">
  	<tstamp>
  	    <format property="YEAR" pattern="yyyy"/>
	</tstamp>

  	<property file="${basedir}/libSBMLio-build.properties"/>  		
  		
    <property name="Name" value="${libSBMLio.Name}"/>
    <property name="name" value="${libSBMLio.name}"/>
    <property name="version" value="${libSBMLio.version}"/>

    <property name="year" value="${YEAR}"/>
  	
    <echo message="----------- ${Name} ${version} [${year}] ------------"/>
    <echo message="-----------     ${TODAY}   ------------"/>
    <echo message="-----------     ${DSTAMP} ${TSTAMP}  ------------"/>
  	
    <property environment="env"/>
    <property name="build.compiler" value="modern"/>
    <property name="build.sysclasspath" value="ignore"/>
    <property name="debug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="deprecation" value="false"/>
    <property name="depend" value="true"/>
    <property name="verbose" value="false"/>
    
    <property name="build.number" value="${DSTAMP}-${TSTAMP}"/>
    <property name="build.name" value="${version} (build ${build.number})"/>

    <property name="src.dir" value="${basedir}/src"/>
  	<property name="test.src.dir" value="${basedir}/test"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.src" value="${basedir}/build/src"/>
    <property name="build.dest" value="${basedir}/build/classes"/>
    <property name="build.javadocs" value="${basedir}/doc/api"/>
    <property name="jars.dir" value="${basedir}/lib"/>
    <property name="dist.root" value="${basedir}/dist"/>
    <property name="dist.dir" value="${dist.root}/${name}-${version}"/>
    <property name="package.dir" value="${basedir}/build/package"/>
  	
    <filter token="year" value="${year}"/>
    <filter token="version" value="${version}"/>
    <filter token="date" value="${TODAY}"/>
    <filter token="log" value="true"/>
    <filter token="verbose" value="true"/>

    <!-- add everything needed to the classpath -->
    <!-- adjust the settings to your local environment -->
    <path id="classpath">
      <fileset dir="${jars.dir}" includes="*.jar *.zip">
      </fileset>
    </path>
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage" depends="init">
    <echo message=""/>
    <echo message=""/>
    <echo message="${Name} Build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   compile  --> compiles the source code"/>
    <echo message="   jar      --> generates the ${name}.jar file"/>
    <echo message="   javadoc  --> generates the API documentation"/>
    <echo message="   clean    --> cleans up the directory"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
    <echo message="Done"/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the source code                                            -->
  <!-- =================================================================== -->
  <target name="prepare-src" depends="prepare">
    <!-- create directories -->
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>
    <mkdir dir="${package.dir}"/>
<!--    <mkdir dir="${dist.root}"/>
    <mkdir dir="${dist.dir}"/> -->

    <!-- copy src files -->
    <copy todir="${build.src}" overwrite="yes">
        <fileset 
            dir="${src.dir}"
            excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip ">
        </fileset>
    </copy>
  	
  	<copy todir="${build.src}" overwrite="yes">
  	        <fileset 
  	            dir="${test.src.dir}"
  	        	includes="org/sbml/jsbml/**"
  	            excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip ">
  	        </fileset>
  	    </copy>
  </target>


  <!-- =================================================================== -->
  <!-- Modify somes files                                                  -->
  <!-- =================================================================== -->
  <target name="gen-build-number" unless="dev.mode">
       <echo message="Updating the files with the build number..."/>

       <replace file="${basedir}/doc/Readme.html"
                token="[BUILD.NUMBER]"
                value="${build.name}" />


   </target>
  
  <!-- =================================================================== -->
  <!-- Modify back somes files                                                  -->
  <!-- =================================================================== -->
  <target name="gen-build-number-back" depends="jar" unless="dev.mode">
       <echo message="Updating back the files with [BUILD.NUMBER]..."/>


       <replace file="${basedir}/doc/Readme.html"
                token="${build.name}"
                value="[BUILD.NUMBER]" />

   </target>


  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare-src">   
    <javac srcdir="${build.src}"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}"
           verbose="${verbose}"
           source="1.5"
           target="1.5"
           classpathref="classpath">
    </javac>      
  </target>
  

  <!-- =================================================================== -->  
  <!-- Creates the class package                                           -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile">
      
    <copy todir="${build.dest}">
        <fileset
            dir="${build.src}"
            includes="**/*.png **/*.gif **/*.xsd **/*.tmpl **/data/* **/*.xml **/*.cfg **/*.obo" > 
        </fileset>
    </copy>
    <jar jarfile="${build.dir}/${name}-${version}.jar"
         basedir="${build.dest}"/>
  </target>

	<!-- =================================================================== -->
	<!-- Creates the source jar package                                      -->
	<!-- =================================================================== -->
	<target name="jar-src" depends="prepare-src">

		<jar jarfile="${build.dir}/${name}-${version}-src.jar" basedir="${build.src}" includes="**/*.java"/>

	</target>

	<!-- =================================================================== -->
	<!-- Creates the distribution                                            -->
	<!-- =================================================================== -->
	<target name="dist" depends="prepare-src">

		<mkdir dir="${dist.root}"/>
		<mkdir dir="${dist.dir}"/>

		<!-- Creates the standard jar file -->

		<antcall target="clean"/>

		<antcall target="jar"/>
		<antcall target="jar-src"/>
		<copy todir="${dist.dir}" file="${build.dir}/${name}-${version}-src.jar"/>

		<copy todir="${dist.dir}" file="${build.dir}/${name}-${version}.jar"/>
		<copy todir="${dist.root}" file="${build.dir}/${name}-${version}.jar"/>


		<!-- Creates and copy the generated javadoc -->
		<antcall target="jar-javadoc"/>

		<copy todir="${dist.dir}/doc/api">
			<fileset dir="${build.javadocs}/" includes="**/*">
			</fileset>
		</copy>
		<copy todir="${dist.dir}" file="${build.dir}/${name}-${version}-javadoc.jar"/>

		<!-- Copy the source files -->
		<copy todir="${dist.dir}/src">
			<fileset dir="${build.src}/" includes="**/*">
			</fileset>
		</copy>

		<!-- Copy all the dependencies jar files -->
		<copy todir="${dist.dir}/lib">
			<fileset dir="${jars.dir}/" includes="*.jar" excludes="jsbml*.jar">
			</fileset>
		</copy>


		<copy todir="${dist.dir}">
			<fileset dir="${basedir}/" includes="LICENSE.txt NEWS.txt README AUTHORS.txt build.xml">
			</fileset>
		</copy>
		<copy todir="${dist.dir}/licenses">
			<fileset dir="${basedir}/licenses" includes="**/*">
			</fileset>
		</copy>

		<copy todir="${dist.dir}/doc">
			<fileset dir="${basedir}/doc" includes="**/*.pdf **/*.jpg **/*.java">

			</fileset>
		</copy>

		<!-- Creates the archives to be distributed -->
		<zip basedir="${dist.root}" destfile="${dist.root}/${name}-${version}.zip" includes="${name}-${version}/**"/>

		<!-- Not generating a tar.gz a having only a zip file should be enough -->
		<!-- <tar basedir="${dist.root}" destfile="${dist.root}/${name}-${version}.tar.gz" includes="${name}-${version}/**" compression="gzip"/> -->

	</target>


  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="javadoc" depends="prepare-src">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="org.*"
             excludepackagenames="org.sbml.jsbml.test.*"
             sourcepath="${build.src}"
             destdir="${build.javadocs}"
             classpathref="classpath"
             maxmemory="96m"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} ${version} API"
             doctitle="${Name} ${version} API"
    	     breakiterator="yes"
    >
		<link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
		<link href="http://sbml.org/Special/Software/JSBML/build/apidocs/index.html"/>
   </javadoc> 	
  </target>

	<!-- =================================================================== -->
	<!-- Creates the javadocs jar package                                      -->
	<!-- =================================================================== -->
	<target name="jar-javadoc" depends="javadoc">

		<jar jarfile="${build.dir}/${name}-${version}-javadoc.jar" basedir="${build.javadocs}" />

	</target>

  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete includeEmptyDirs="true" quiet="yes">
       <fileset dir="${build.dir}" includes="**/*"/>
    </delete>
  	<delete dir="${dist.root}" includeEmptyDirs="true" quiet="yes">
  	    </delete>
  </target>
</project>

<!-- End of file -->
